#from Monopoly import Player

class Square:    
    def __init__(self, address = "", rent = 10):
        self.address = address
        self.rent = rent
        self.owner = None
        print(f'Square address = {self.address}')

    def getPrice(self):
        return 200
        
    def landedOn(self, loc):
        pass
    
    def setRent(self, r):
        self.rent = r
    
    def getRent(self):
        return self.rent

    def canPurchase(self):
        return self.owner == None
        
class RegularSquare(Square):
    def landedOn():
        pass
      
class GoSquare(Square):
    def landedOn():
        pass
      
class InComeTaxSquare(Square):
    def landedOn():
        pass
    
class PropertySquare(Square):
    def __init__(self, address = '', rent = 10):
        super().__init__(address, rent)
        
    def setOwner(p):
        pass
    
    def landedOn(self, loc):
        pass
      
    def payRent(p):
        if owner != p:
            r = getRent()
            owner.addCash(r)
            p.reduceCash(r)

class LotSquare(Square):
      def getRent(r):
          return index

class RRSquare(Square):
    def __init__(self, address = '', rent = 5):
        super().__init__(address, rent)


class RailRoadSquare(Square):
#      owner = Player()
      def getRent(r):
          pass
#          c = owner.getRRCount()

class UtilitySquare:
      def getRent(r):
          tot = cup.getTotal()
